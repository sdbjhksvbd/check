import unittest
from splunk.appserver.mrsparkle.controllers import admin

class TestExtractPathFromURI(unittest.TestCase):
    def test_alpha_chars(self):
        url = 'http://argle.blarg/bleargh'
        expected_path = '/bleargh'
        self.assertEqual(admin._extractPathFromURI(url), expected_path);

    def test_alpha_and_num_chars(self):
        url = 'http://argle.blarg/bleargh/56789oijhbbjo'
        expected_path = '/bleargh/56789oijhbbjo'
        self.assertEqual(admin._extractPathFromURI(url), expected_path);

    def test_upper_and_lower_aplha(self):
        url = 'https://argle.blarg/BLarGLe'
        expected_path = '/BLarGLe'
        self.assertEqual(admin._extractPathFromURI(url), expected_path);

    def test_multi_part(self):
        url = 'https://argle.blarg/blech/asdf'
        expected_path = '/blech/asdf'
        self.assertEqual(admin._extractPathFromURI(url), expected_path);

    def test_multi_part_with_args(self):
        url = 'https://hilarious-hedgehog-ypo.stg.splunkcloud.com/en-US/manager/system/saved/searches?app=system&count=10&offset=0&itemType=&owner=admin'
        expected_path = '/en-US/manager/system/saved/searches?app=system&count=10&offset=0&itemType=&owner=admin'
        self.assertEqual(admin._extractPathFromURI(url), expected_path);

    def test_multi_part_with_fragment(self):
        url = 'https://hilarious-hedgehog-ypo.stg.splunkcloud.com/en-US/manager/system/saved/searches?app=system&count=10&offset=0&itemType=&owner=admin#bargle'
        expected_path = '/en-US/manager/system/saved/searches?app=system&count=10&offset=0&itemType=&owner=admin#bargle'
        self.assertEqual(admin._extractPathFromURI(url), expected_path);

    def test_api_expected(self):
        url = 'api.bleargh'
        expected_path = 'api.bleargh'
        self.assertEqual(admin._extractPathFromURI(url), expected_path);

    def test_unexpanded(self):
        url = 'https://acuif-demo.stg.splunkcloud.com/en-US/account/login?session_expired=1&return_to=%2Fen-US%2Fmanager%2Fsystem%2Fsystemsettings'
        expected_path = '/en-US/account/login?session_expired=1&return_to=%2Fen-US%2Fmanager%2Fsystem%2Fsystemsettings'
        self.assertEqual(admin._extractPathFromURI(url), expected_path);

if __name__ == '__main__':
    unittest.main()
