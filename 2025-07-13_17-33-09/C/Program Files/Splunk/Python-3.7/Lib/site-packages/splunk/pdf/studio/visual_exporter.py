import sys
import splunk.pdf.pdfgen_utils as pdfgen_utils
from splunk.clilib.bundle_paths import make_splunkhome_path
from splunk.rest.splunk_web_requests import get_dashboard_studio_settings

logger = pdfgen_utils.getLogger()

sys.path.append(make_splunkhome_path(
    ['etc', 'apps', 'splunk-visual-exporter', 'bin']))
sys.path.append(make_splunkhome_path(
    ['etc', 'apps', 'splunk-visual-exporter', 'bin', 'modules']))


def get_chromium_engine():
    try:
        from export_utils.chromium.engine import ChromiumEngine
        return ChromiumEngine()
    except ImportError as err:
        logger.error(err)
        logger.error('Visual Exporter App is not installed')
        return None

def get_formatted_feature_flags(sessionKey=None):
    feature_flags = {}
    feature_flag_content = get_dashboard_studio_settings(sessionKey)
    feature_flags['feature:dashboard_studio'] = feature_flag_content
    return feature_flags


def get_screenshot(definition, theme="light", sessionKey=None, studioErrors=None):
    '''
    Uses the chromium engine at etc/apps/splunk-visual-exporter/bin/utils/chromium/engine.py to take a screenshot of a dashboard

    Returns False if the app is not installed
    '''
    engine = get_chromium_engine()
    if (engine is None):
        return False
    
    feature_flags = get_formatted_feature_flags(sessionKey)

    if studioErrors == None:
        studioErrors = []

    return engine.get_screenshot(definition, theme, feature_flags, studioErrors)
