import unittest
import os
import subprocess
import sys

import splunk.clilib.cli_common as cli_common

class UT(unittest.TestCase):

    def testDecrypt(self):
        launcher_path = os.path.join(cli_common.splunk_home, "bin", "splunk")
        if sys.platform == "win32":
            launcher_path += ".exe"
        password = "passw0rd"
        encrypt_cmd = [launcher_path, 'show-encrypted', '--value', password]
        p = subprocess.Popen(encrypt_cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        out = p.communicate()[0]
        if sys.version_info >= (3, 0):
            out = out.decode()
        encrypted = out.strip()
        decrypted = cli_common.decrypt(encrypted, False)
        self.assertEqual(decrypted, password)
        decrypted = cli_common.decrypt(encrypted, True)
        self.assertEqual(decrypted, password)

if __name__ == '__main__':
	unittest.main()
