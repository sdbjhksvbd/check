import os
from splunk.quarantine_files.configs import base_config, config_utils
from splunk.rest import splunk_web_requests

class EnableJQuery2(base_config.Config):
    def __init__(self, session_key):
        base_config.Config.__init__(self, True)
        self.setting = "enable_jQuery2"
        quarantine_files_settings = splunk_web_requests.get_quarantine_files_settings(session_key)
        self.should_restrict = not quarantine_files_settings[self.setting]
    def get_paths_to_restrict(self, base_path):
        web_base_path = os.path.join(base_path, 'share', 'splunk', 'search_mrsparkle', 'exposed')
        paths_to_restrict = [
            os.path.join(web_base_path, 'build', 'pages', 'enterprise', 'dashboard.js'),
            os.path.join(web_base_path, 'build', 'pages', 'dark', 'dashboard.js'),
            os.path.join(web_base_path, 'js', 'contrib', 'jquery-2.1.0.js'),
            os.path.join(web_base_path, 'js', 'contrib', 'jquery-2.1.0.min.js'),
            os.path.join(web_base_path, 'js', 'contrib', 'jquery-1.8.2.js'),
            os.path.join(base_path, 'share', 'splunk', 'search_mrsparkle', 'templates', 'pages', 'dashboard.html'),
        ]
        folders_to_restrict = [
            os.path.join(web_base_path, 'build', 'simplexml'),
            os.path.join(web_base_path, 'js', 'build', 'simplexml'),
            os.path.join(web_base_path, 'js', 'build', 'simplexml.min'),
            os.path.join(web_base_path, 'js', 'contrib', 'jquery'),
        ]
        for folder in folders_to_restrict:
            paths_to_restrict += config_utils.get_all_files_in_dir_recursive(folder)
        paths_to_restrict += self.get_restricted_web_build_paths(web_base_path)
        return paths_to_restrict
    def get_restricted_web_build_paths(self, web_base_path):
        candidate_dirs = [
            os.path.join(web_base_path, 'build', 'pages', 'enterprise'),
            os.path.join(web_base_path, 'build', 'pages', 'dark'),
        ]
        candidate_paths_to_restrict = []
        for dir in candidate_dirs:
            candidate_paths_to_restrict += config_utils.get_all_files_in_dir_recursive(dir)
        return [x for x in candidate_paths_to_restrict if x.endswith('.web.js')]
