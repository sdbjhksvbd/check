import unittest
import os
from splunk.quarantine_files.configs import config_utils
from splunk.file_writing_utils import write_path, delete_path

class TestGetAllFilesInDirRecursive(unittest.TestCase):
    def setUp(self):
        self.target_dir = os.path.join(os.path.expanduser("~"), 'quarantined_test')
    def tearDown(self):
        delete_path(self.target_dir)
        self.target_dir = None
    def write_paths(self, paths):
        for path in paths:
            write_path(path)
    def verify_paths(self, paths, all_files):
        self.assertEqual(len(all_files), len(paths))
        for path in paths:
            self.assertTrue(path in all_files)
    def test_single_file(self):
        paths = [
            os.path.join(self.target_dir, 'foo.js')
        ]
        self.write_paths(paths)
        all_files = config_utils.get_all_files_in_dir_recursive(self.target_dir)
        self.verify_paths(paths, all_files)
    def test_multilevel_files(self):
        paths = [
            os.path.join(self.target_dir, 'foo.js'),
            os.path.join(self.target_dir, 'lvl_one', 'foo.js'),
            os.path.join(self.target_dir, 'lvl_two', 'lvl_three', 'foo.js')
        ]
        self.write_paths(paths)
        all_files = config_utils.get_all_files_in_dir_recursive(self.target_dir)
        self.verify_paths(paths, all_files)

if __name__ == '__main__':
    unittest.main()
