import unittest
from splunk.appserver.mrsparkle.controllers import config

class TestDoesHostMatchHeader(unittest.TestCase):
    def setUp(self):
        self.controller = config.ConfigController()

    def tearDown(self):
        self.controller = None

    def test_match_no_port(self):
        origin = "http://foo.com"
        host = "foo.com"
        result = self.controller.does_host_match_header(origin, host)
        self.assertEqual(result, True)

    def test_match_http(self):
        origin = "http://foo.com"
        host = "foo.com:80"
        result = self.controller.does_host_match_header(origin, host)
        self.assertEqual(result, True)

    def test_match_https(self):
        origin = "https://foo.com"
        host = "foo.com:443"
        result = self.controller.does_host_match_header(origin, host)
        self.assertEqual(result, True)

    def test_no_match_different_host(self):
        origin = "https://foo.com"
        host = "bar.com"
        result = self.controller.does_host_match_header(origin, host)
        self.assertEqual(result, False)

    def test_different_port_does_not_match(self):
        origin = "https://foo.com"
        host = "foo.com:80"
        result = self.controller.does_host_match_header(origin, host)
        self.assertEqual(result, False)

    def test_empty_strings_do_not_match(self):
        origin = ""
        host = ""
        result = self.controller.does_host_match_header(origin, host)
        self.assertEqual(result, False)

    def test_non_http_https_matching_port(self):
        origin = "http://localhost:8000"
        host = "localhost:8000"
        result = self.controller.does_host_match_header(origin, host)
        self.assertEqual(result, True)

if __name__ == '__main__':
    unittest.main()
