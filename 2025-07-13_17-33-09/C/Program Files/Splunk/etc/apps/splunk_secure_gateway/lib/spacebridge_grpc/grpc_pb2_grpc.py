# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import discovery_pb2 as discovery__pb2
from . import http_pb2 as http__pb2
from . import metadata_pb2 as metadata__pb2
from . import registration_v2_pb2 as registration__v2__pb2
from . import sb_common_pb2 as sb__common__pb2


class AuthenticationCodeRegistrationStub(object):
    """*
    Registration V1 apis which use a 10-digit authentication code to register with Spacebridge.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GenerateAuthenticationCode = channel.unary_unary(
                '/Spacebridge.AuthenticationCodeRegistration/GenerateAuthenticationCode',
                request_serializer=http__pb2.DeviceAuthenticationRequest.SerializeToString,
                response_deserializer=http__pb2.DeviceAuthenticationResponse.FromString,
                )
        self.QueryClientRegistration = channel.unary_unary(
                '/Spacebridge.AuthenticationCodeRegistration/QueryClientRegistration',
                request_serializer=http__pb2.AuthenticationQueryRequest.SerializeToString,
                response_deserializer=http__pb2.AuthenticationQueryResponse.FromString,
                )
        self.ConfirmClientRegistration = channel.unary_unary(
                '/Spacebridge.AuthenticationCodeRegistration/ConfirmClientRegistration',
                request_serializer=http__pb2.DevicePairingConfirmationRequest.SerializeToString,
                response_deserializer=http__pb2.DevicePairingConfirmationResponse.FromString,
                )
        self.QueryDeploymentRegistration = channel.unary_unary(
                '/Spacebridge.AuthenticationCodeRegistration/QueryDeploymentRegistration',
                request_serializer=http__pb2.AuthenticationResultRequest.SerializeToString,
                response_deserializer=http__pb2.AuthenticationResultResponse.FromString,
                )


class AuthenticationCodeRegistrationServicer(object):
    """*
    Registration V1 apis which use a 10-digit authentication code to register with Spacebridge.
    """

    def GenerateAuthenticationCode(self, request, context):
        """*
        Initiate registration from the client side and fetch a 10-digit authentication code from spacebridge which is
        valid for 15 minutes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryClientRegistration(self, request, context):
        """
        Start registration from the server side by submitting the 10-digit auth code to spacebridge and retrieve
        info for the device associated to that auth code
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmClientRegistration(self, request, context):
        """*
        Complete registration from the server side by sending server info such as encryption and signing public keys
        to spacebridge.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryDeploymentRegistration(self, request, context):
        """*
        Client side api which checks whether server has completed registration and if it has completed, return server
        info such as the server's encryption public key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthenticationCodeRegistrationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GenerateAuthenticationCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateAuthenticationCode,
                    request_deserializer=http__pb2.DeviceAuthenticationRequest.FromString,
                    response_serializer=http__pb2.DeviceAuthenticationResponse.SerializeToString,
            ),
            'QueryClientRegistration': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryClientRegistration,
                    request_deserializer=http__pb2.AuthenticationQueryRequest.FromString,
                    response_serializer=http__pb2.AuthenticationQueryResponse.SerializeToString,
            ),
            'ConfirmClientRegistration': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmClientRegistration,
                    request_deserializer=http__pb2.DevicePairingConfirmationRequest.FromString,
                    response_serializer=http__pb2.DevicePairingConfirmationResponse.SerializeToString,
            ),
            'QueryDeploymentRegistration': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryDeploymentRegistration,
                    request_deserializer=http__pb2.AuthenticationResultRequest.FromString,
                    response_serializer=http__pb2.AuthenticationResultResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Spacebridge.AuthenticationCodeRegistration', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthenticationCodeRegistration(object):
    """*
    Registration V1 apis which use a 10-digit authentication code to register with Spacebridge.
    """

    @staticmethod
    def GenerateAuthenticationCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.AuthenticationCodeRegistration/GenerateAuthenticationCode',
            http__pb2.DeviceAuthenticationRequest.SerializeToString,
            http__pb2.DeviceAuthenticationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryClientRegistration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.AuthenticationCodeRegistration/QueryClientRegistration',
            http__pb2.AuthenticationQueryRequest.SerializeToString,
            http__pb2.AuthenticationQueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConfirmClientRegistration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.AuthenticationCodeRegistration/ConfirmClientRegistration',
            http__pb2.DevicePairingConfirmationRequest.SerializeToString,
            http__pb2.DevicePairingConfirmationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryDeploymentRegistration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.AuthenticationCodeRegistration/QueryDeploymentRegistration',
            http__pb2.AuthenticationResultRequest.SerializeToString,
            http__pb2.AuthenticationResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AuthenticationCodeRegistrationV2Stub(object):
    """*
    Registration v2 apis that implements a more secure registration protocol with Spacebridge.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GenerateEntropy = channel.unary_unary(
                '/Spacebridge.AuthenticationCodeRegistrationV2/GenerateEntropy',
                request_serializer=registration__v2__pb2.EntropyGenerationRequest.SerializeToString,
                response_deserializer=registration__v2__pb2.EntropyGenerationResponse.FromString,
                )
        self.RegisterPublicKey = channel.unary_unary(
                '/Spacebridge.AuthenticationCodeRegistrationV2/RegisterPublicKey',
                request_serializer=registration__v2__pb2.RegisterPublicKeysRequest.SerializeToString,
                response_deserializer=registration__v2__pb2.RegisterPublicKeysResponse.FromString,
                )
        self.RegisterClient = channel.unary_unary(
                '/Spacebridge.AuthenticationCodeRegistrationV2/RegisterClient',
                request_serializer=registration__v2__pb2.ClientRegistrationRequest.SerializeToString,
                response_deserializer=registration__v2__pb2.ClientRegistrationResponse.FromString,
                )
        self.QueryClientRegistration = channel.unary_unary(
                '/Spacebridge.AuthenticationCodeRegistrationV2/QueryClientRegistration',
                request_serializer=registration__v2__pb2.RegistrarQueryRequest.SerializeToString,
                response_deserializer=registration__v2__pb2.RegistrarQueryResponse.FromString,
                )
        self.ConfirmClientRegistration = channel.unary_unary(
                '/Spacebridge.AuthenticationCodeRegistrationV2/ConfirmClientRegistration',
                request_serializer=registration__v2__pb2.RegistrarResultRequest.SerializeToString,
                response_deserializer=registration__v2__pb2.RegistrarResultResponse.FromString,
                )
        self.QueryRegistration = channel.unary_unary(
                '/Spacebridge.AuthenticationCodeRegistrationV2/QueryRegistration',
                request_serializer=registration__v2__pb2.ClientResultRequest.SerializeToString,
                response_deserializer=registration__v2__pb2.ClientResultResponse.FromString,
                )
        self.EnableRouting = channel.unary_unary(
                '/Spacebridge.AuthenticationCodeRegistrationV2/EnableRouting',
                request_serializer=registration__v2__pb2.RoutingEnableRequest.SerializeToString,
                response_deserializer=registration__v2__pb2.RoutingEnableResponse.FromString,
                )
        self.DeleteClientRegistration = channel.unary_unary(
                '/Spacebridge.AuthenticationCodeRegistrationV2/DeleteClientRegistration',
                request_serializer=registration__v2__pb2.DeleteClientRegistrationRequest.SerializeToString,
                response_deserializer=registration__v2__pb2.DeleteClientRegistrationResponse.FromString,
                )


class AuthenticationCodeRegistrationV2Servicer(object):
    """*
    Registration v2 apis that implements a more secure registration protocol with Spacebridge.
    """

    def GenerateEntropy(self, request, context):
        """*
        Get spacebridge to generate a nonce with high entropy (not needed if client has the ability to do that on its own)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterPublicKey(self, request, context):
        """*
        Register public keys for signing and encryption with spacebridge
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterClient(self, request, context):
        """*
        Client initiates registration with spacebridge
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryClientRegistration(self, request, context):
        """*
        Server fetches client registration by submitting an auth code corresponding to the client's registration
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmClientRegistration(self, request, context):
        """*
        Complete server side registration and submit server metadata such as public keys to spacebridge in an encrypted bundle
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryRegistration(self, request, context):
        """*
        Client polls spacebridge for a completed registration and receives encrypted server bundle once server completes
        registration on its end.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnableRouting(self, request, context):
        """*
        Allows a specific client id to send messages to this client
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteClientRegistration(self, request, context):
        """*
        Delete registration request for a given auth id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthenticationCodeRegistrationV2Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GenerateEntropy': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateEntropy,
                    request_deserializer=registration__v2__pb2.EntropyGenerationRequest.FromString,
                    response_serializer=registration__v2__pb2.EntropyGenerationResponse.SerializeToString,
            ),
            'RegisterPublicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterPublicKey,
                    request_deserializer=registration__v2__pb2.RegisterPublicKeysRequest.FromString,
                    response_serializer=registration__v2__pb2.RegisterPublicKeysResponse.SerializeToString,
            ),
            'RegisterClient': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterClient,
                    request_deserializer=registration__v2__pb2.ClientRegistrationRequest.FromString,
                    response_serializer=registration__v2__pb2.ClientRegistrationResponse.SerializeToString,
            ),
            'QueryClientRegistration': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryClientRegistration,
                    request_deserializer=registration__v2__pb2.RegistrarQueryRequest.FromString,
                    response_serializer=registration__v2__pb2.RegistrarQueryResponse.SerializeToString,
            ),
            'ConfirmClientRegistration': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmClientRegistration,
                    request_deserializer=registration__v2__pb2.RegistrarResultRequest.FromString,
                    response_serializer=registration__v2__pb2.RegistrarResultResponse.SerializeToString,
            ),
            'QueryRegistration': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryRegistration,
                    request_deserializer=registration__v2__pb2.ClientResultRequest.FromString,
                    response_serializer=registration__v2__pb2.ClientResultResponse.SerializeToString,
            ),
            'EnableRouting': grpc.unary_unary_rpc_method_handler(
                    servicer.EnableRouting,
                    request_deserializer=registration__v2__pb2.RoutingEnableRequest.FromString,
                    response_serializer=registration__v2__pb2.RoutingEnableResponse.SerializeToString,
            ),
            'DeleteClientRegistration': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteClientRegistration,
                    request_deserializer=registration__v2__pb2.DeleteClientRegistrationRequest.FromString,
                    response_serializer=registration__v2__pb2.DeleteClientRegistrationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Spacebridge.AuthenticationCodeRegistrationV2', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthenticationCodeRegistrationV2(object):
    """*
    Registration v2 apis that implements a more secure registration protocol with Spacebridge.
    """

    @staticmethod
    def GenerateEntropy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.AuthenticationCodeRegistrationV2/GenerateEntropy',
            registration__v2__pb2.EntropyGenerationRequest.SerializeToString,
            registration__v2__pb2.EntropyGenerationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterPublicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.AuthenticationCodeRegistrationV2/RegisterPublicKey',
            registration__v2__pb2.RegisterPublicKeysRequest.SerializeToString,
            registration__v2__pb2.RegisterPublicKeysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.AuthenticationCodeRegistrationV2/RegisterClient',
            registration__v2__pb2.ClientRegistrationRequest.SerializeToString,
            registration__v2__pb2.ClientRegistrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryClientRegistration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.AuthenticationCodeRegistrationV2/QueryClientRegistration',
            registration__v2__pb2.RegistrarQueryRequest.SerializeToString,
            registration__v2__pb2.RegistrarQueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConfirmClientRegistration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.AuthenticationCodeRegistrationV2/ConfirmClientRegistration',
            registration__v2__pb2.RegistrarResultRequest.SerializeToString,
            registration__v2__pb2.RegistrarResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryRegistration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.AuthenticationCodeRegistrationV2/QueryRegistration',
            registration__v2__pb2.ClientResultRequest.SerializeToString,
            registration__v2__pb2.ClientResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnableRouting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.AuthenticationCodeRegistrationV2/EnableRouting',
            registration__v2__pb2.RoutingEnableRequest.SerializeToString,
            registration__v2__pb2.RoutingEnableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteClientRegistration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.AuthenticationCodeRegistrationV2/DeleteClientRegistration',
            registration__v2__pb2.DeleteClientRegistrationRequest.SerializeToString,
            registration__v2__pb2.DeleteClientRegistrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class SessionStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.unregisterClientPairing = channel.unary_unary(
                '/Spacebridge.Session/unregisterClientPairing',
                request_serializer=http__pb2.DeviceUnregistrationRequest.SerializeToString,
                response_deserializer=http__pb2.DeviceUnregistrationResponse.FromString,
                )


class SessionServicer(object):
    """Missing associated documentation comment in .proto file."""

    def unregisterClientPairing(self, request, context):
        """*
        Unregister a client or deployment from spacebridge
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'unregisterClientPairing': grpc.unary_unary_rpc_method_handler(
                    servicer.unregisterClientPairing,
                    request_deserializer=http__pb2.DeviceUnregistrationRequest.FromString,
                    response_serializer=http__pb2.DeviceUnregistrationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Spacebridge.Session', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Session(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def unregisterClientPairing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.Session/unregisterClientPairing',
            http__pb2.DeviceUnregistrationRequest.SerializeToString,
            http__pb2.DeviceUnregistrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PushNotificationStub(object):
    """*
    Apis for managing push notifications through spacebridge
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.registerForPushNotifications = channel.unary_unary(
                '/Spacebridge.PushNotification/registerForPushNotifications',
                request_serializer=http__pb2.NotificationRegistrationRequest.SerializeToString,
                response_deserializer=http__pb2.NotificationRegistrationResponse.FromString,
                )
        self.sendPushNotification = channel.unary_unary(
                '/Spacebridge.PushNotification/sendPushNotification',
                request_serializer=http__pb2.SendNotificationRequest.SerializeToString,
                response_deserializer=http__pb2.SendNotificationResponse.FromString,
                )


class PushNotificationServicer(object):
    """*
    Apis for managing push notifications through spacebridge
    """

    def registerForPushNotifications(self, request, context):
        """*
        register a client device to receive push notifications
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendPushNotification(self, request, context):
        """*
        Send a push notification to a client device
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PushNotificationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'registerForPushNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.registerForPushNotifications,
                    request_deserializer=http__pb2.NotificationRegistrationRequest.FromString,
                    response_serializer=http__pb2.NotificationRegistrationResponse.SerializeToString,
            ),
            'sendPushNotification': grpc.unary_unary_rpc_method_handler(
                    servicer.sendPushNotification,
                    request_deserializer=http__pb2.SendNotificationRequest.FromString,
                    response_serializer=http__pb2.SendNotificationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Spacebridge.PushNotification', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PushNotification(object):
    """*
    Apis for managing push notifications through spacebridge
    """

    @staticmethod
    def registerForPushNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.PushNotification/registerForPushNotifications',
            http__pb2.NotificationRegistrationRequest.SerializeToString,
            http__pb2.NotificationRegistrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendPushNotification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.PushNotification/sendPushNotification',
            http__pb2.SendNotificationRequest.SerializeToString,
            http__pb2.SendNotificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MessageBusStub(object):
    """*
    Apis to connect to Spacebridge and send messages
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.connectToClient = channel.stream_stream(
                '/Spacebridge.MessageBus/connectToClient',
                request_serializer=sb__common__pb2.SignedEnvelope.SerializeToString,
                response_deserializer=sb__common__pb2.SignedEnvelope.FromString,
                )
        self.send = channel.unary_unary(
                '/Spacebridge.MessageBus/send',
                request_serializer=http__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=http__pb2.SendMessageResponse.FromString,
                )


class MessageBusServicer(object):
    """*
    Apis to connect to Spacebridge and send messages
    """

    def connectToClient(self, request_iterator, context):
        """*
        Connect a client to Spacebridge
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send(self, request, context):
        """*
        Send a message to a recipient over Spacebridge
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessageBusServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'connectToClient': grpc.stream_stream_rpc_method_handler(
                    servicer.connectToClient,
                    request_deserializer=sb__common__pb2.SignedEnvelope.FromString,
                    response_serializer=sb__common__pb2.SignedEnvelope.SerializeToString,
            ),
            'send': grpc.unary_unary_rpc_method_handler(
                    servicer.send,
                    request_deserializer=http__pb2.SendMessageRequest.FromString,
                    response_serializer=http__pb2.SendMessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Spacebridge.MessageBus', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MessageBus(object):
    """*
    Apis to connect to Spacebridge and send messages
    """

    @staticmethod
    def connectToClient(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/Spacebridge.MessageBus/connectToClient',
            sb__common__pb2.SignedEnvelope.SerializeToString,
            sb__common__pb2.SignedEnvelope.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def send(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.MessageBus/send',
            http__pb2.SendMessageRequest.SerializeToString,
            http__pb2.SendMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DiscoveryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getSpacebridgeInstance = channel.unary_unary(
                '/Spacebridge.Discovery/getSpacebridgeInstance',
                request_serializer=discovery__pb2.GetSpacebridgeInstanceRequest.SerializeToString,
                response_deserializer=discovery__pb2.GetSpacebridgeInstanceResponse.FromString,
                )
        self.getSpacebridgeInstances = channel.unary_unary(
                '/Spacebridge.Discovery/getSpacebridgeInstances',
                request_serializer=discovery__pb2.GetSpacebridgeInstancesRequest.SerializeToString,
                response_deserializer=discovery__pb2.GetSpacebridgeInstancesResponse.FromString,
                )
        self.setHashCodeInstance = channel.unary_unary(
                '/Spacebridge.Discovery/setHashCodeInstance',
                request_serializer=discovery__pb2.SetHashCodeInstanceRequest.SerializeToString,
                response_deserializer=discovery__pb2.SetHashCodeInstanceResponse.FromString,
                )
        self.getHashCodeInstance = channel.unary_unary(
                '/Spacebridge.Discovery/getHashCodeInstance',
                request_serializer=discovery__pb2.GetHashCodeInstanceRequest.SerializeToString,
                response_deserializer=discovery__pb2.GetHashCodeInstanceResponse.FromString,
                )
        self.initiateHashCodeInstance = channel.unary_unary(
                '/Spacebridge.Discovery/initiateHashCodeInstance',
                request_serializer=discovery__pb2.InitiateHashCodeInstanceRequest.SerializeToString,
                response_deserializer=discovery__pb2.InitiateHashCodeInstanceResponse.FromString,
                )


class DiscoveryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getSpacebridgeInstance(self, request, context):
        """*
        Get a spacebridge instance's metadata given a specific instance id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSpacebridgeInstances(self, request, context):
        """*
        Gets all public, cloud-based Spacebridge instances. Used to populate region lists.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setHashCodeInstance(self, request, context):
        """*
        Updates the instance metadata for an ephemeral hashcode. Must be first initiated by the registering client.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getHashCodeInstance(self, request, context):
        """*
        Gets Spacebridge instance metadata for an ephemeral hashcode. Returns an empty response if the instanceId has not yet been set.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def initiateHashCodeInstance(self, request, context):
        """*
        Initiates a discovery registration by uploading the hashcode the client will use.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DiscoveryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getSpacebridgeInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.getSpacebridgeInstance,
                    request_deserializer=discovery__pb2.GetSpacebridgeInstanceRequest.FromString,
                    response_serializer=discovery__pb2.GetSpacebridgeInstanceResponse.SerializeToString,
            ),
            'getSpacebridgeInstances': grpc.unary_unary_rpc_method_handler(
                    servicer.getSpacebridgeInstances,
                    request_deserializer=discovery__pb2.GetSpacebridgeInstancesRequest.FromString,
                    response_serializer=discovery__pb2.GetSpacebridgeInstancesResponse.SerializeToString,
            ),
            'setHashCodeInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.setHashCodeInstance,
                    request_deserializer=discovery__pb2.SetHashCodeInstanceRequest.FromString,
                    response_serializer=discovery__pb2.SetHashCodeInstanceResponse.SerializeToString,
            ),
            'getHashCodeInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.getHashCodeInstance,
                    request_deserializer=discovery__pb2.GetHashCodeInstanceRequest.FromString,
                    response_serializer=discovery__pb2.GetHashCodeInstanceResponse.SerializeToString,
            ),
            'initiateHashCodeInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.initiateHashCodeInstance,
                    request_deserializer=discovery__pb2.InitiateHashCodeInstanceRequest.FromString,
                    response_serializer=discovery__pb2.InitiateHashCodeInstanceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Spacebridge.Discovery', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Discovery(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getSpacebridgeInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.Discovery/getSpacebridgeInstance',
            discovery__pb2.GetSpacebridgeInstanceRequest.SerializeToString,
            discovery__pb2.GetSpacebridgeInstanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getSpacebridgeInstances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.Discovery/getSpacebridgeInstances',
            discovery__pb2.GetSpacebridgeInstancesRequest.SerializeToString,
            discovery__pb2.GetSpacebridgeInstancesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setHashCodeInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.Discovery/setHashCodeInstance',
            discovery__pb2.SetHashCodeInstanceRequest.SerializeToString,
            discovery__pb2.SetHashCodeInstanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getHashCodeInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.Discovery/getHashCodeInstance',
            discovery__pb2.GetHashCodeInstanceRequest.SerializeToString,
            discovery__pb2.GetHashCodeInstanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def initiateHashCodeInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.Discovery/initiateHashCodeInstance',
            discovery__pb2.InitiateHashCodeInstanceRequest.SerializeToString,
            discovery__pb2.InitiateHashCodeInstanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MetadataStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getSpacebridgeMetadata = channel.unary_unary(
                '/Spacebridge.Metadata/getSpacebridgeMetadata',
                request_serializer=metadata__pb2.GetSpacebridgeMetadataRequest.SerializeToString,
                response_deserializer=metadata__pb2.GetSpacebridgeMetadataResponse.FromString,
                )


class MetadataServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getSpacebridgeMetadata(self, request, context):
        """*
        Return spacebridge instance information for a specific spacebridge deployment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MetadataServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getSpacebridgeMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.getSpacebridgeMetadata,
                    request_deserializer=metadata__pb2.GetSpacebridgeMetadataRequest.FromString,
                    response_serializer=metadata__pb2.GetSpacebridgeMetadataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Spacebridge.Metadata', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Metadata(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getSpacebridgeMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spacebridge.Metadata/getSpacebridgeMetadata',
            metadata__pb2.GetSpacebridgeMetadataRequest.SerializeToString,
            metadata__pb2.GetSpacebridgeMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
