{"version":3,"file":"925.925.af9999f4d9fdeefb67fa.js","mappings":"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","sources":["webpack://remote-manage-config-page/./node_modules/@splunk/config-form-generator/dist/index.js","webpack://remote-manage-config-page/./src/config-page/limits-config/LimitsConfig.apiservice.ts","webpack://remote-manage-config-page/./src/config-page/limits-config/LimitsConfig.testids.ts","webpack://remote-manage-config-page/./src/config-page/limits-config/LimitsConfig.component.tsx","webpack://remote-manage-config-page/./src/config-page/limits-config/LimitsConfig.constants.ts","webpack://remote-manage-config-page/./src/shared/components/FilterHOCs/filterHOCs.tsx","webpack://remote-manage-config-page/./src/shared/components/TokenAuthDisabled/TokenAuthDisabled.testids.ts","webpack://remote-manage-config-page/./src/shared/components/TokenAuthDisabled/TokenAuthDisabled.component.tsx","webpack://remote-manage-config-page/./src/shared/services/UserService/UserService.ts"],"sourcesContent":["/*!\n * Copyright Â© 2018 Splunk Inc.\n * SPLUNK CONFIDENTIAL â€“ Use or disclosure of this material in whole or\n * in part without a valid written license from Splunk Inc. is PROHIBITED.\n */\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \t// The require scope\n/******/ \tvar __webpack_require__ = {};\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"IForm\": () => (/* reexport */ interfaces_namespaceObject.IForm),\n  \"IFormData\": () => (/* reexport */ interfaces_namespaceObject.IFormData),\n  \"IProps\": () => (/* reexport */ interfaces_namespaceObject.IProps),\n  \"IStanza\": () => (/* reexport */ interfaces_namespaceObject.IStanza),\n  \"IStanzaField\": () => (/* reexport */ interfaces_namespaceObject.IStanzaField),\n  \"default\": () => (/* reexport */ ConfigFormGenerator_component)\n});\n\n// NAMESPACE OBJECT: ./src/interfaces.ts\nvar interfaces_namespaceObject = {};\n__webpack_require__.r(interfaces_namespaceObject);\n\n;// CONCATENATED MODULE: external \"react\"\nconst external_react_namespaceObject = require(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_namespaceObject);\n;// CONCATENATED MODULE: external \"@splunk/sui-form-renderer\"\nconst sui_form_renderer_namespaceObject = require(\"@splunk/sui-form-renderer\");\n;// CONCATENATED MODULE: ./src/helper/schema-generator.ts\nconst updateObject = ({\n  sourceObj,\n  targetObj,\n  keyName\n}) => {\n  if (keyName in sourceObj) {\n    targetObj[keyName] = sourceObj[keyName];\n  }\n};\n\nconst generateShortDesc = fieldConfig => {\n  const description = [];\n\n  if ('defaultValue' in fieldConfig) {\n    description.push(\"Default: \" + fieldConfig.defaultValue);\n  }\n\n  if (fieldConfig.dataType === 'integer' || fieldConfig.dataType === 'number') {\n    if ('minimum' in fieldConfig) {\n      description.push(\"Min: \" + fieldConfig.minimum);\n    }\n\n    if ('maximum' in fieldConfig) {\n      description.push(\"Max: \" + fieldConfig.maximum);\n    }\n  }\n\n  if (fieldConfig.shortDescription) {\n    description.push(fieldConfig.shortDescription);\n  }\n\n  return description.join('; ');\n};\n\nconst generateLongDesc = fieldConfig => {\n  if (!fieldConfig.longDescription) {\n    return '';\n  }\n\n  return fieldConfig.longDescription.map(desc => \"* \" + desc).join('\\n');\n};\n\nconst keysToAddInFieldSchema = {\n  integer: ['minimum', 'maximum'],\n  number: ['minimum', 'maximum'],\n  string: ['minLength', 'maxLength']\n};\n\nconst constructFieldSchema = fieldConfig => {\n  const config = {\n    type: fieldConfig.dataType\n  };\n  (keysToAddInFieldSchema[fieldConfig.dataType] || []).forEach(field => {\n    updateObject({\n      sourceObj: fieldConfig,\n      targetObj: config,\n      keyName: field\n    });\n  });\n  config.description = generateShortDesc(fieldConfig) + \"\\n\\n\" + generateLongDesc(fieldConfig);\n  return config;\n};\n\nconst generateSchema = form => {\n  const schema = {\n    type: 'object',\n    properties: {}\n  };\n\n  if (!form.stanzas || form.stanzas.length === 0) {\n    return schema;\n  }\n\n  form.stanzas.forEach(({\n    fields = [],\n    keyName\n  }) => {\n    const stanzaConfig = {\n      type: 'object',\n      properties: {},\n      required: []\n    };\n    fields.forEach(currField => {\n      const fieldName = currField.keyName;\n      stanzaConfig.properties[fieldName] = constructFieldSchema(currField);\n\n      if (currField.isRequired) {\n        stanzaConfig.required.push(fieldName);\n      }\n    });\n    schema.properties[keyName] = stanzaConfig;\n  });\n  return schema;\n};\n;// CONCATENATED MODULE: ./src/helper/ui-schema-generator.ts\nconst scopePathJoinerText = '/properties';\n\nconst constructStanzaLabelConfig = label => {\n  return {\n    text: label,\n    type: 'Label'\n  };\n};\n\nconst constructFieldConfig = ({\n  keyName,\n  displayLabel = 'Field'\n}, prefix) => {\n  return {\n    type: 'Control',\n    label: displayLabel,\n    scope: \"\" + prefix + scopePathJoinerText + \"/\" + keyName,\n    options: {\n      suiControlGroupProps: {\n        labelWidth: '170px',\n        style: {\n          maxWidth: '900px'\n        }\n      },\n      suiComponentProps: {\n        hideStepButtons: true\n      }\n    }\n  };\n};\n\nconst generateUISchema = form => {\n  const uiSchema = {\n    type: 'VerticalLayout',\n    elements: []\n  };\n\n  if (!form.stanzas || form.stanzas.length === 0) {\n    return uiSchema;\n  }\n\n  form.stanzas.forEach(currStanza => {\n    const stanzaUISchema = {\n      type: 'VerticalLayout',\n      elements: [constructStanzaLabelConfig(currStanza.displayLabel)]\n    };\n    const fieldsInStanza = currStanza.fields || [];\n    const prefix = \"#\" + scopePathJoinerText + \"/\" + currStanza.keyName;\n    fieldsInStanza.forEach(currField => {\n      stanzaUISchema.elements.push(constructFieldConfig(currField, prefix));\n    });\n    uiSchema.elements.push(stanzaUISchema);\n  });\n  return uiSchema;\n};\n;// CONCATENATED MODULE: external \"@splunk/react-ui/Link\"\nconst Link_namespaceObject = require(\"@splunk/react-ui/Link\");\nvar Link_default = /*#__PURE__*/__webpack_require__.n(Link_namespaceObject);\n;// CONCATENATED MODULE: external \"@splunk/react-ui/Paragraph\"\nconst Paragraph_namespaceObject = require(\"@splunk/react-ui/Paragraph\");\nvar Paragraph_default = /*#__PURE__*/__webpack_require__.n(Paragraph_namespaceObject);\n;// CONCATENATED MODULE: external \"@splunk/splunk-utils/url\"\nconst url_namespaceObject = require(\"@splunk/splunk-utils/url\");\n;// CONCATENATED MODULE: external \"@splunk/sui-forms-shared-utils\"\nconst sui_forms_shared_utils_namespaceObject = require(\"@splunk/sui-forms-shared-utils\");\n;// CONCATENATED MODULE: ./src/constants.ts\nconst remoteAppName = 'SUIFormRenderer';\n;// CONCATENATED MODULE: ./src/Header/Header.testids.ts\n\n\nconst TEST_IDS = {\n  HEADER: 'Header',\n  LEARN_MORE_LINK: 'LearnmoreLink'\n};\n(0,sui_forms_shared_utils_namespaceObject.normalizeDataTestIds)({\n  remoteAppName: remoteAppName,\n  compName: 'Header',\n  testIds: TEST_IDS\n});\n/* harmony default export */ const Header_testids = (TEST_IDS);\n;// CONCATENATED MODULE: external \"@babel/runtime/helpers/taggedTemplateLiteral\"\nconst taggedTemplateLiteral_namespaceObject = require(\"@babel/runtime/helpers/taggedTemplateLiteral\");\nvar taggedTemplateLiteral_default = /*#__PURE__*/__webpack_require__.n(taggedTemplateLiteral_namespaceObject);\n;// CONCATENATED MODULE: external \"styled-components\"\nconst external_styled_components_namespaceObject = require(\"styled-components\");\nvar external_styled_components_default = /*#__PURE__*/__webpack_require__.n(external_styled_components_namespaceObject);\n;// CONCATENATED MODULE: external \"@splunk/themes\"\nconst themes_namespaceObject = require(\"@splunk/themes\");\n;// CONCATENATED MODULE: ./src/Header/Header.styles.ts\n\n\nvar _templateObject;\n\n\n\nconst HeaderWrapper = external_styled_components_default().div(_templateObject || (_templateObject = taggedTemplateLiteral_default()([\"\\n    display: flex;\\n    justify-content: space-between;\\n    border-bottom: 1px solid \", \";\\n    padding: 0 20px 20px;\\n    margin-bottom: 30px;\\n\"])), (0,themes_namespaceObject.pick)({\n  enterprise: themes_namespaceObject.variables.borderColor,\n  prisma: themes_namespaceObject.variables.neutral200\n}));\n;// CONCATENATED MODULE: ./src/messages.ts\n\nconst MESSAGES = {\n  COMMON: {\n    WARNING: {\n      WARNING: 'Warning:',\n      WARNING_TEXT: 'Do not edit these settings unless you know what you are doing. A successful request message means that your edits have been submitted successfully, but setting changes can still take time to propagate.'\n    },\n    LEARN_MORE: 'Learn more'\n  }\n}; // Localize messages\n\n(0,sui_forms_shared_utils_namespaceObject.localizeMessages)(MESSAGES);\n;// CONCATENATED MODULE: ./src/Header/Header.component.tsx\n\n\n\n\n\n\n\n\nconst Header = ({\n  docLocationString\n}) => {\n  return /*#__PURE__*/external_react_default().createElement(HeaderWrapper, {\n    \"data-test-name\": Header_testids.HEADER\n  }, /*#__PURE__*/external_react_default().createElement((Paragraph_default()), null, /*#__PURE__*/external_react_default().createElement(\"b\", null, MESSAGES.COMMON.WARNING.WARNING), \" \", MESSAGES.COMMON.WARNING.WARNING_TEXT, ' ', /*#__PURE__*/external_react_default().createElement((Link_default()), {\n    to: (0,url_namespaceObject.createDocsURL)(docLocationString),\n    openInNewContext: true,\n    \"data-test-name\": Header_testids.LEARN_MORE_LINK\n  }, MESSAGES.COMMON.LEARN_MORE)));\n};\n\n/* harmony default export */ const Header_component = (Header);\n;// CONCATENATED MODULE: ./src/ConfigFormGenerator/ConfigFormGenerator.styles.ts\n\n\nvar ConfigFormGenerator_styles_templateObject, _templateObject2;\n\n\n\nconst ActionAreaWrapper = external_styled_components_default().div(ConfigFormGenerator_styles_templateObject || (ConfigFormGenerator_styles_templateObject = taggedTemplateLiteral_default()([\"\\n    display: flex;\\n    justify-content: flex-end;\\n    border-top: 1px solid \", \";\\n    padding: 20px;\\n\"])), (0,themes_namespaceObject.pick)({\n  enterprise: themes_namespaceObject.variables.borderColor,\n  prisma: themes_namespaceObject.variables.neutral200\n}));\nconst MainWrapper = external_styled_components_default().div(_templateObject2 || (_templateObject2 = taggedTemplateLiteral_default()([\"\\n    max-width: 960px;\\n    padding: 30px 20px 20px 20px;\\n    background-color: \", \";\\n    box-shadow: \", \";\\n    margin: 20px auto;\\n    display: flex;\\n    flex-direction: column;\\n\"])), (0,themes_namespaceObject.pick)({\n  enterprise: themes_namespaceObject.variables.backgroundColor,\n  prisma: themes_namespaceObject.variables.backgroundColorPopup\n}), themes_namespaceObject.variables.overlayShadow);\n;// CONCATENATED MODULE: ./src/ConfigFormGenerator/ConfigFormGenerator.component.tsx\n\n\n\n\n\n\n\nfunction ConfigFormGenerator({\n  formConfig,\n  formData,\n  onSubmit,\n  docLocationString\n}) {\n  return /*#__PURE__*/external_react_default().createElement(sui_form_renderer_namespaceObject.SUIFormRendererCompound, null, /*#__PURE__*/external_react_default().createElement(Header_component, {\n    docLocationString: docLocationString\n  }), /*#__PURE__*/external_react_default().createElement(MainWrapper, null, /*#__PURE__*/external_react_default().createElement(sui_form_renderer_namespaceObject.SUIFormRendererCompound.ErrorView, null), /*#__PURE__*/external_react_default().createElement(sui_form_renderer_namespaceObject.SUIFormRendererCompound.Form, {\n    data: formData,\n    schema: generateSchema(formConfig),\n    uischema: generateUISchema(formConfig)\n  }), /*#__PURE__*/external_react_default().createElement(ActionAreaWrapper, null, /*#__PURE__*/external_react_default().createElement(sui_form_renderer_namespaceObject.SUIFormRendererCompound.ActionButtons, {\n    onSubmit: onSubmit,\n    showSaveWarning: true\n  }))));\n}\n\n/* harmony default export */ const ConfigFormGenerator_component = (ConfigFormGenerator);\n;// CONCATENATED MODULE: ./src/interfaces.ts\n\n;// CONCATENATED MODULE: ./src/index.tsx\n\n\nmodule.exports = __webpack_exports__;\n/******/ })()\n;\n//# sourceMappingURL=index.js.map","import 'core-js/proposals/promise-all-settled';\nimport { isEmpty, omitBy, set as setPathValue } from 'lodash';\nimport { IForm, IFormData, IStanza } from '@splunk/config-form-generator';\nimport {\n    LimitsConfigDefaults,\n    LimitsConfigStanzas,\n    LimitsConfigStanzaValues,\n    LimitsConfigFieldValues,\n    LimitsConfigJoinFieldValues,\n    LimitsConfigKVFieldValues,\n    LimitsConfigSubsearchFieldValues,\n    LimitsConfigSchedulerFieldValues,\n    LimitsConfigSPathFieldValues,\n    LimitsConfigPDFFieldValues,\n    LimitsConfigSearchResultsFieldValues,\n    UpdateStanzaParams,\n    ILimitsConfigFnReturnType,\n    ParsedACSResponse,\n} from './LimitsConfig.interfaces';\n\nimport { filterErrorMessages } from '../../shared/utils/helper';\nimport { TrackingService } from '../../shared/services/TrackingService';\nimport { UserService } from '../../shared/services/UserService';\nimport { MESSAGES } from '../../messages';\n\nexport const stanzaValues: LimitsConfigStanzaValues[] = [\n    LimitsConfigStanzaValues.JOIN,\n    LimitsConfigStanzaValues.KV,\n    LimitsConfigStanzaValues.SUBSEARCH,\n    LimitsConfigStanzaValues.SCHEDULER,\n    LimitsConfigStanzaValues.SPATH,\n    LimitsConfigStanzaValues.PDF,\n    LimitsConfigStanzaValues.SEARCHRESULTS,\n];\n\nconst joinFieldValues: LimitsConfigJoinFieldValues[] = [\n    LimitsConfigJoinFieldValues.SUBSEARCH_MAXOUT,\n    LimitsConfigJoinFieldValues.SUBSEARCH_MAXTIME,\n];\n\nconst kvFieldValues: LimitsConfigKVFieldValues[] = [\n    LimitsConfigKVFieldValues.LIMIT,\n    LimitsConfigKVFieldValues.MAXCHARS,\n    LimitsConfigKVFieldValues.MAXCOLS,\n];\n\nconst subsearchFieldValues: LimitsConfigSubsearchFieldValues[] = [\n    LimitsConfigSubsearchFieldValues.MAXOUT,\n    LimitsConfigSubsearchFieldValues.MAXTIME,\n];\n\nconst schedulerFieldValues: LimitsConfigSchedulerFieldValues[] = [\n    LimitsConfigSchedulerFieldValues.MAX_PER_RESULT_ALERTS,\n    LimitsConfigSchedulerFieldValues.MAX_PER_RESULT_ALERTS_TIME,\n];\n\nconst spathFieldValues: LimitsConfigSPathFieldValues[] = [LimitsConfigSPathFieldValues.EXTRACTION_CUTOFF];\n\nconst pdfFieldValues: LimitsConfigPDFFieldValues[] = [LimitsConfigPDFFieldValues.MAX_ROWS_PER_TABLE];\n\nconst searchResultsFieldValues: LimitsConfigSearchResultsFieldValues[] = [\n    LimitsConfigSearchResultsFieldValues.MAXRESULTROWS,\n];\n\nconst fieldValues = new Map<LimitsConfigStanzaValues, LimitsConfigFieldValues[]>([\n    [LimitsConfigStanzaValues.JOIN, joinFieldValues],\n    [LimitsConfigStanzaValues.KV, kvFieldValues],\n    [LimitsConfigStanzaValues.SUBSEARCH, subsearchFieldValues],\n    [LimitsConfigStanzaValues.SCHEDULER, schedulerFieldValues],\n    [LimitsConfigStanzaValues.SPATH, spathFieldValues],\n    [LimitsConfigStanzaValues.PDF, pdfFieldValues],\n    [LimitsConfigStanzaValues.SEARCHRESULTS, searchResultsFieldValues],\n]);\n\nconst constructLimitsConfigURL = (): string => {\n    return `${UserService.getACSBaseURL()}/limits`;\n};\n\nconst constructLimitsConfigDefaultsURL = (): string => {\n    return `${UserService.getACSBaseURL()}/limits/defaults`;\n};\n\nconst constructLimitsConfigStanzaURL = (stanza: LimitsConfigStanzaValues): string => {\n    return `${UserService.getACSBaseURL()}/limits/${stanza}`;\n};\n\nasync function handleACSResponse<Type>(response: Response): Promise<Type> {\n    // 200 for fetching values, 202 for updating values\n    if (response.status === 200 || response.status === 202) {\n        try {\n            return (await response.json()) as Type;\n        } catch (err) {\n            throw new Error(err.message);\n        }\n    } else {\n        const err = await response.json();\n        throw new Error(err.message);\n    }\n}\n\n/*\n * Update formCofig with any changes from the defaults endpoint.\n */\nconst assembleFormConfig = (limitsDefaults: LimitsConfigDefaults): IForm => {\n    const defaultFormConfig: IForm = {\n        id: 'limits-config',\n        stanzas: [],\n    };\n    limitsDefaults.forEach((stanza) => {\n        if (stanzaValues.includes(stanza.stanza as LimitsConfigStanzaValues)) {\n            const defaultStanza: IStanza = {\n                keyName: stanza.stanza,\n                displayLabel: stanza.stanza,\n                fields: [],\n            };\n            defaultFormConfig.stanzas.push(defaultStanza);\n            stanza.settings.forEach((field) => {\n                if (\n                    fieldValues\n                        .get(stanza.stanza as LimitsConfigStanzaValues)\n                        .includes(field.setting as LimitsConfigFieldValues)\n                ) {\n                    defaultStanza.fields.push({\n                        keyName: field.setting,\n                        displayLabel: field.setting,\n                        dataType: 'integer',\n                        defaultValue: field.defaultValue,\n                        minimum: field.minValue,\n                        maximum: field.maxValue,\n                        shortDescription: MESSAGES.LIMITS_CONFIG.SHORT_DESCRIPTION[field.setting] || '',\n                        isRequired: true,\n                    });\n                }\n            });\n        }\n    });\n    return defaultFormConfig;\n};\n\nexport const fetchFormConfig = async (): Promise<IForm> => {\n    try {\n        const response = await UserService.withJwtTokenRetry(() =>\n            fetch(constructLimitsConfigDefaultsURL(), {\n                headers: UserService.getACSHeaders(),\n            })\n        );\n        const parsedText = await handleACSResponse<LimitsConfigDefaults>(response);\n        const limitsFormConfig = assembleFormConfig(parsedText);\n\n        return limitsFormConfig;\n    } catch (err) {\n        throw new Error(err.message);\n    }\n};\n\nconst updateStanza = async (args: UpdateStanzaParams): Promise<ParsedACSResponse> => {\n    const { stanza, settings } = args;\n    const body = JSON.stringify({ settings });\n    try {\n        const response = await UserService.withJwtTokenRetry(() =>\n            fetch(constructLimitsConfigStanzaURL(stanza), {\n                method: 'post',\n                headers: UserService.getACSHeaders(),\n                body,\n            })\n        );\n        return await handleACSResponse<LimitsConfigStanzas>(response);\n    } catch (err) {\n        console.log(err);\n        throw err;\n    }\n};\n\nlet initialData: IFormData = stanzaValues.reduce((acc, curr, index) => {\n    acc[stanzaValues[index]] = {};\n    return acc;\n}, {} as IFormData);\n\n/*\n * Only return the limits.conf stanzas that are enumerated in LimitsConfigStanzaValues.\n */\nconst selectData = (limitsData: LimitsConfigStanzas): IFormData => {\n    const selectedData = {};\n    limitsData.forEach((stanza) => {\n        if (stanzaValues.includes(stanza.Stanza as LimitsConfigStanzaValues)) {\n            selectedData[stanza.Stanza] = {};\n            Object.keys(stanza.Values).forEach((fieldName) => {\n                if (\n                    fieldValues\n                        .get(stanza.Stanza as LimitsConfigStanzaValues)\n                        .includes(fieldName as LimitsConfigFieldValues)\n                ) {\n                    selectedData[stanza.Stanza][fieldName] = Number(stanza.Values[fieldName]);\n                }\n            });\n        }\n    });\n    return selectedData;\n};\n\nconst generateErrorMessage = (records: PromiseSettledResult<ParsedACSResponse>[]): string[] => {\n    return records.map((resp) => {\n        if (resp.status === 'rejected') {\n            if ((resp.reason.message as string) !== '') {\n                return resp.reason.message as string;\n            }\n            return MESSAGES.COMMON.DEFAULT_ERROR_MSG;\n        }\n        return '';\n    });\n};\n\nexport const fetchConfigSettings = async (): Promise<ILimitsConfigFnReturnType> => {\n    try {\n        const response = await UserService.withJwtTokenRetry(() =>\n            fetch(constructLimitsConfigURL(), {\n                headers: UserService.getACSHeaders(),\n            })\n        );\n        const parsedText = await handleACSResponse<LimitsConfigStanzas>(response);\n        const limitsData = selectData(parsedText);\n        initialData = limitsData;\n        return {\n            records: initialData,\n            error: [],\n        };\n    } catch (err) {\n        throw new Error(err.message);\n    }\n};\n\nexport const manageLimitsConfig = async (updatedData: IFormData): Promise<ILimitsConfigFnReturnType> => {\n    const promises: Promise<ParsedACSResponse>[] = [];\n    const trackingData = {};\n    let hasUpdates = false;\n    for (let i = 0; i < stanzaValues.length; i += 1) {\n        const prevSettings = initialData[stanzaValues[i]];\n        const currSettings = updatedData[stanzaValues[i]];\n        const changed = omitBy(currSettings, (curr, prev) => prevSettings[prev] === curr);\n        if (isEmpty(changed)) {\n            promises.push(Promise.resolve({}));\n        } else {\n            hasUpdates = true;\n            setPathValue(trackingData, `${stanzaValues[i]}.request.update`, changed.length);\n            promises.push(\n                updateStanza({\n                    stanza: stanzaValues[i],\n                    settings: changed,\n                })\n                    .then((resp) => {\n                        setPathValue(trackingData, `${stanzaValues[i]}.response.updated`, changed.length);\n                        return resp;\n                    })\n                    .catch((error) => {\n                        setPathValue(trackingData, `${stanzaValues[i]}.response.updated`, 0);\n                        return Promise.reject(error);\n                    })\n            );\n        }\n    }\n    if (!hasUpdates) {\n        return {};\n    }\n\n    const responses = await Promise.allSettled(promises);\n    TrackingService.trackEvent({\n        type: 'manageConfigPage.submitBtnClicked',\n        data: trackingData,\n    });\n    const errorMessages = generateErrorMessage(responses);\n\n    if (filterErrorMessages(errorMessages).length) {\n        const errorUseCases = [];\n        errorMessages.forEach((curr, index) => {\n            if (curr !== '') {\n                errorUseCases.push(stanzaValues[index]);\n            }\n        });\n        TrackingService.trackEvent({\n            type: 'manageConfigPage.errorOnSubmit',\n            data: {\n                errorUseCases: errorUseCases.join(', '),\n            },\n        });\n        try {\n            const { records } = await fetchConfigSettings();\n            // Reset initialData to the last saved data\n            initialData = records;\n            return {\n                error: errorMessages,\n            };\n        } catch (err) {\n            return {\n                error: [err.message],\n            };\n        }\n    }\n\n    initialData = updatedData;\n    return {\n        records: initialData,\n    };\n};\n","import { normalizeDataTestIds } from '@splunk/sui-forms-shared-utils';\nimport { remoteAppName } from '../../constants';\n\nconst TEST_IDS = {\n    CONTENT: 'Content',\n    WARNING: 'Warning',\n    CONTAINER: 'Container',\n    LEARN_MORE_LINK: 'LearnmoreLink',\n    WAITSPINNER: 'Waitspinner',\n    ERROR_MSG: 'ErrorMessage',\n};\n\nnormalizeDataTestIds({ remoteAppName, compName: 'LimitsConfig', testIds: TEST_IDS });\nexport default TEST_IDS;\n","import React, { FC, useState, useEffect } from 'react';\nimport ConfigureSplunkConfigFile, {\n    IFormData,\n    IForm,\n    IProps as ConfigFormGeneratorProps,\n} from '@splunk/config-form-generator';\nimport { ErrorMessagesType, Errors } from '@splunk/sui-form-renderer';\nimport { flowRight as compose, upperFirst } from 'lodash';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';\nimport styled from 'styled-components';\n\nimport {\n    withRBACFilter,\n    withSplunkEnvFilter,\n    withExperienceFilter,\n} from '../../shared/components/FilterHOCs/filterHOCs';\nimport TokenAuthDisabled from '../../shared/components/TokenAuthDisabled/TokenAuthDisabled.component';\nimport {\n    stanzaValues,\n    fetchFormConfig,\n    fetchConfigSettings,\n    manageLimitsConfig,\n} from './LimitsConfig.apiservice';\nimport { MESSAGES } from '../../messages';\nimport { UserService } from '../../shared/services/UserService';\nimport { LIMITS_CONFIG_LOC_STR } from './LimitsConfig.constants';\nimport TEST_IDS from './LimitsConfig.testids';\nimport ERRORS_CODES from '../../shared/services/UserService/errors';\n\nconst WaitSpinnerWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 40px;\n    margin-bottom: 40px;\n`;\n\nconst ErrorWrapper = styled.div`\n    margin-left: 25px;\n    margin-right: 25px;\n    margin-bottom: 25px;\n`;\n\nconst LimitsConfig: FC = () => {\n    const [formConfig, setFormConfig] = useState<IForm>();\n    const [formData, setFormData] = useState<IFormData>({});\n    const [errorMessages, setErrorMessages] = useState<ErrorMessagesType>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [tokenAuthEnabled, setTokenAuthEnabled] = useState(false);\n\n    useEffect(() => {\n        const initFormConfig = async (): Promise<void> => {\n            setFormConfig(await fetchFormConfig());\n        };\n\n        const initConfigSettings = async (): Promise<void> => {\n            const { records, error } = await fetchConfigSettings();\n            setFormData(records);\n            setErrorMessages(error);\n        };\n\n        const exec = async (): Promise<void> => {\n            try {\n                // Init UserService singleton to start ACS related page bootstrap\n                await UserService.init('v2');\n                setTokenAuthEnabled(true);\n                await Promise.all([initFormConfig(), initConfigSettings()]);\n            } catch (err) {\n                const errorCodes = new Set([\n                    ERRORS_CODES.STACK_ID_INVALID,\n                    ERRORS_CODES.ACS_ENVIRONMENT_NOT_FOUND,\n                    ERRORS_CODES.CANNOT_CREATE_JWT_TOKEN,\n                ]);\n                if (errorCodes.has(err.message)) {\n                    setTokenAuthEnabled(true);\n                    setErrorMessages([MESSAGES.USER_CONTEXT.ERRORS[err.message]]);\n                } else if (err.message === ERRORS_CODES.TOKEN_AUTH_DISABLED) {\n                    setTokenAuthEnabled(false);\n                } else {\n                    setErrorMessages([err.message]);\n                }\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        exec();\n    }, []);\n\n    const updateErrMsgWithStanzaName = (errorMsgs: string[] = []): ErrorMessagesType => {\n        const nonEmptyErrorMsgs: ErrorMessagesType = [];\n        errorMsgs.forEach((errorMsg, index) => {\n            if (!errorMsg) {\n                return;\n            }\n            nonEmptyErrorMsgs.push({\n                key: stanzaValues[index],\n                value: upperFirst(errorMsg),\n            });\n        });\n        return nonEmptyErrorMsgs;\n    };\n\n    const handleSubmit: ConfigFormGeneratorProps['onSubmit'] = async ({ data, successCb, failureCb }) => {\n        const { records, error = [] } = await manageLimitsConfig(data);\n        // If no records were updated, do nothing.\n        if (!records && !error.length) {\n            return;\n        }\n        // Update records only if present. For error cases, we don't want to re-render the forms to preserve the user input that caused errors.\n        if (records) {\n            setFormData(records);\n        }\n        if (error.length) {\n            failureCb(updateErrMsgWithStanzaName(error));\n        } else {\n            successCb();\n        }\n    };\n\n    return (\n        <>\n            {tokenAuthEnabled && !isLoading && (\n                <>\n                    {errorMessages.length > 0 && (\n                        <ErrorWrapper>\n                            <Errors errorMessages={errorMessages} />\n                        </ErrorWrapper>\n                    )}\n                    {!errorMessages.length && (\n                        <ConfigureSplunkConfigFile\n                            formConfig={formConfig}\n                            formData={formData}\n                            onSubmit={handleSubmit}\n                            docLocationString={LIMITS_CONFIG_LOC_STR}\n                        />\n                    )}\n                </>\n            )}\n            {!tokenAuthEnabled && !isLoading && <TokenAuthDisabled />}\n            {isLoading && (\n                <WaitSpinnerWrapper data-test-name={TEST_IDS.WAITSPINNER}>\n                    <WaitSpinner size=\"medium\" />\n                </WaitSpinnerWrapper>\n            )}\n        </>\n    );\n};\n\nconst LimitsConfigPage = compose([\n    withExperienceFilter(['noah']),\n    withSplunkEnvFilter(['cloud']),\n    withRBACFilter(['edit_limits_conf']),\n])(LimitsConfig);\n\nexport default LimitsConfigPage;\n","export const LIMITS_CONFIG_LOC_STR = 'learnmore.limits_conf';\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { $any, SplunkInstanceTypes, SplunkExperienceTypes } from '../../../app.interfaces';\nimport { ServerInfoService } from '../../services/ServerInfoService';\nimport { UserContextService } from '../../services/UserContextService';\nimport { ExperienceService } from '../../services/ExperienceService';\nimport { IFilterHOCReturnType, OS, OSList } from './filterHOCs.interfaces';\nimport { MESSAGES } from '../../../messages';\n\nconst ErrorWrapper = styled.div`\n    margin: 25px;\n`;\n\nconst ErrorView: FC<{ msg: string }> = ({ msg = 'Error loading page' }) => {\n    return <h2>{msg}</h2>;\n};\n\nexport const withRBACFilter =\n    (permissionsNeeded = []): IFilterHOCReturnType<$any> =>\n    (Comp: React.ComponentType): FC<$any> => {\n        const hasPermission = UserContextService.canReadPage(permissionsNeeded);\n        const RBACFilterComp: FC<$any> = (props) => {\n            return !hasPermission ? (\n                <ErrorWrapper>\n                    <ErrorView msg={MESSAGES.FILTER_HOC.ERRORS.RBAC_FILTER} />\n                </ErrorWrapper>\n            ) : (\n                <Comp {...props} />\n            );\n        };\n        return RBACFilterComp;\n    };\n\nexport const withSplunkEnvFilter =\n    (supportedEnvs: SplunkInstanceTypes[] = []): IFilterHOCReturnType<$any> =>\n    (Comp: React.ComponentType): FC<$any> => {\n        const supportsEnv = supportedEnvs.includes(ServerInfoService.getSplunkInstanceType());\n        const SplunkEnvFilterComp: FC<$any> = (props) => {\n            return !supportsEnv ? (\n                <ErrorWrapper>\n                    <ErrorView msg={MESSAGES.FILTER_HOC.ERRORS.SPLUNK_ENV_FILTER} />\n                </ErrorWrapper>\n            ) : (\n                <Comp {...props} />\n            );\n        };\n        return SplunkEnvFilterComp;\n    };\n\nexport const withOSFilter =\n    (supportedOS: OSList = []): IFilterHOCReturnType<$any> =>\n    (Comp: React.ComponentType): FC<$any> => {\n        const supportsOS = supportedOS.includes(ServerInfoService.getOS() as OS);\n        const OSFilterComp: FC<$any> = (props) => {\n            return !supportsOS ? (\n                <ErrorWrapper>\n                    <ErrorView msg={MESSAGES.FILTER_HOC.ERRORS.OS_FILTER} />\n                </ErrorWrapper>\n            ) : (\n                <Comp {...props} />\n            );\n        };\n        return OSFilterComp;\n    };\n\nexport const withExperienceFilter =\n    (supportedExperiences: SplunkExperienceTypes[] = []): IFilterHOCReturnType<$any> =>\n    (Comp: React.ComponentType): FC<$any> => {\n        const supportsExperience = supportedExperiences.includes(ExperienceService.getExperienceType());\n        const ExperienceFilterComp: FC<$any> = (props) => {\n            return !supportsExperience ? (\n                <ErrorWrapper>\n                    <ErrorView msg={MESSAGES.FILTER_HOC.ERRORS.SPLUNK_EXPERIENCE_FILTER} />\n                </ErrorWrapper>\n            ) : (\n                <Comp {...props} />\n            );\n        };\n        return ExperienceFilterComp;\n    };\n","import { normalizeDataTestIds } from '@splunk/sui-forms-shared-utils';\nimport { remoteAppName } from '../../../constants';\n\nconst TEST_IDS = {\n    CONTAINER: 'Container',\n    LEARN_MORE_LINK: 'LearnmoreLink',\n    TOKEN_AUTH_BTN: 'TokenAuthBtn',\n};\n\nnormalizeDataTestIds({ remoteAppName, compName: 'TokenAuthDisabled', testIds: TEST_IDS });\nexport default TEST_IDS;\n","import React, { FC } from 'react';\nimport Button from '@splunk/react-ui/Button';\nimport Link from '@splunk/react-ui/Link';\nimport P from '@splunk/react-ui/Paragraph';\nimport { createURL, createDocsURL } from '@splunk/splunk-utils/url';\nimport styled from 'styled-components';\nimport { MESSAGES } from '../../../messages';\nimport TEST_IDS from './TokenAuthDisabled.testids';\n\nconst WrapperDiv = styled.div`\n    padding: 0px 20px 0;\n`;\n\nconst StyledLink = styled(Link)`\n    margin-left: 5px;\n`;\n\nconst TokenAuthDisabled: FC = () => {\n    return (\n        <WrapperDiv data-test-name={TEST_IDS.CONTAINER}>\n            <P>\n                {MESSAGES.TOKEN_AUTH_DISABLED.PAGE_CONTENT}\n                <StyledLink\n                    to={createDocsURL(MESSAGES.TOKEN_AUTH_DISABLED.TOKEN_AUTH_LEARN_MORE)}\n                    openInNewContext\n                    data-test-name={TEST_IDS.LEARN_MORE_LINK}\n                >\n                    {MESSAGES.COMMON.LEARN_MORE}\n                </StyledLink>\n            </P>\n            <Button\n                label={MESSAGES.TOKEN_AUTH_DISABLED.TOKEN_AUTH_BTN_LABEL}\n                appearance=\"primary\"\n                to={createURL(MESSAGES.TOKEN_AUTH_DISABLED.TOKEN_AUTH_URL)}\n                openInNewContext\n                data-test-name={TEST_IDS.TOKEN_AUTH_BTN}\n            />\n        </WrapperDiv>\n    );\n};\n\nexport default TokenAuthDisabled;\n","import { get } from 'lodash';\nimport querystring from 'querystring';\nimport { defaultFetchInit, handleResponse } from '@splunk/splunk-utils/fetch';\nimport { createRESTURL } from '@splunk/splunk-utils/url';\nimport { UserContextService } from '../UserContextService';\nimport { ACSEnvironments, ACSVersion, IWithJwtTokenRetryFn } from './UserService.interfaces';\nimport ERRORS_CODES from './errors';\n\nclass UserServiceSingleton {\n    private isInitialized = false;\n\n    private acsVersion = 'v1';\n\n    private isTokenAuthDisabled = false;\n\n    private jwtToken = '';\n\n    private stackID = '';\n\n    private acsBaseURL = '';\n\n    private checkIfTokenAuthIsEnabledURL = createRESTURL('admin/Token-auth/tokens_auth?output_mode=json');\n\n    private createJWTTokenURL = createRESTURL('authorization/tokens?output_mode=json');\n\n    private stackIDUrl = createRESTURL('properties/web/remoteUI?output_mode=json', {\n        app: '100-whisper-searchhead',\n    });\n\n    public init = async (version: ACSVersion): Promise<void> => {\n        if (this.isInitialized) {\n            return;\n        }\n        this.acsVersion = version;\n\n        // These next 4 methods must be called in this order\n        await this.fetchIsTokenAuthDisabled();\n        await this.fetchStackID();\n        await this.createJwtToken();\n        await this.fetchACSEnv();\n        this.isInitialized = true;\n    };\n\n    public getStackID = (): string => {\n        return this.stackID;\n    };\n\n    public getACSBaseURL = (): string => {\n        return this.acsBaseURL;\n    };\n\n    public getACSHeaders = (): Headers => {\n        return new Headers({\n            Authorization: `Bearer ${this.jwtToken}`,\n            'Content-Type': 'application/json',\n            'User-Agent': 'Splunk-ACS-UI',\n        });\n    };\n\n    private createJwtToken = async (): Promise<void> => {\n        const jwtTokenArgs = {\n            name: UserContextService.getCurrUsername(),\n            expires_on: '+2m',\n            audience: 'IP_ALLOW_LIST_UI',\n            type: 'ephemeral',\n        };\n\n        const fetchSettings = {\n            ...defaultFetchInit,\n            method: 'POST',\n            body: querystring.encode(jwtTokenArgs),\n        };\n        try {\n            const response = await fetch(this.createJWTTokenURL, fetchSettings);\n            const json = await handleResponse(201)(response);\n            this.jwtToken = get(json, 'entry[0].content.token', '');\n        } catch (err) {\n            throw new Error(ERRORS_CODES.CANNOT_CREATE_JWT_TOKEN);\n        }\n    };\n\n    public withJwtTokenRetry: IWithJwtTokenRetryFn = async (callbackFn): Promise<Response> => {\n        const response = await callbackFn();\n        if (response.status === 401) {\n            await this.createJwtToken();\n            return callbackFn();\n        }\n        return response;\n    };\n\n    private fetchIsTokenAuthDisabled = async (): Promise<void> => {\n        try {\n            const response = await fetch(this.checkIfTokenAuthIsEnabledURL, { ...defaultFetchInit });\n            const json = await handleResponse(200)(response);\n            this.isTokenAuthDisabled = get(json.entry[0], 'content.disabled', true);\n            if (this.isTokenAuthDisabled) {\n                throw new Error(ERRORS_CODES.TOKEN_AUTH_DISABLED);\n            }\n        } catch (err) {\n            throw new Error(ERRORS_CODES.TOKEN_AUTH_DISABLED);\n        }\n    };\n\n    private fetchStackID = async (): Promise<void> => {\n        try {\n            const response = await fetch(this.stackIDUrl, { ...defaultFetchInit });\n            const json = await handleResponse(200)(response);\n            const stackIDEntry = json.entry.find((item) => item.name === 'stack_id');\n            this.stackID = stackIDEntry.content;\n        } catch (err) {\n            throw new Error(ERRORS_CODES.STACK_ID_INVALID);\n        }\n    };\n\n    /*\n     * Uses the ACS status endpoint to determine what environment the stack is in (staging | production)\n     * and then set's the acsBaseUrl so service consumer can form correct ACS request URL\n     */\n    private fetchACSEnv = async (): Promise<void> => {\n        try {\n            const prodEnvUrl = this.formatACSBaseUrl('production');\n            const stgEnvUrl = this.formatACSBaseUrl('staging');\n            const statusEp = '/status';\n\n            const prodResponse = await fetch(prodEnvUrl + statusEp, { headers: this.getACSHeaders() });\n            if (prodResponse.status === 200) {\n                this.acsBaseURL = prodEnvUrl;\n                return;\n            }\n\n            const stgResponse = await fetch(stgEnvUrl + statusEp, { headers: this.getACSHeaders() });\n            if (stgResponse.status === 200) {\n                this.acsBaseURL = stgEnvUrl;\n                return;\n            }\n\n            throw new Error(ERRORS_CODES.ACS_ENVIRONMENT_NOT_FOUND);\n        } catch (err) {\n            throw new Error(ERRORS_CODES.ACS_ENVIRONMENT_NOT_FOUND);\n        }\n    };\n\n    private formatACSBaseUrl = (env: ACSEnvironments): string => {\n        return env === 'staging'\n            ? `https://staging.admin.splunk.com/${this.stackID}/adminconfig/${this.acsVersion}`\n            : `https://admin.splunk.com/${this.stackID}/adminconfig/${this.acsVersion}`;\n    };\n}\n\nexport const UserService = new UserServiceSingleton();\n"],"names":["module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","r","interfaces_namespaceObject","external_react_namespaceObject","external_react_default","n","sui_form_renderer_namespaceObject","keysToAddInFieldSchema","integer","number","string","generateSchema","form","schema","type","properties","stanzas","length","forEach","fields","keyName","stanzaConfig","required","currField","fieldName","fieldConfig","config","dataType","field","sourceObj","targetObj","updateObject","description","push","defaultValue","minimum","maximum","shortDescription","join","generateShortDesc","longDescription","map","desc","generateLongDesc","constructFieldSchema","isRequired","scopePathJoinerText","generateUISchema","uiSchema","elements","currStanza","stanzaUISchema","label","displayLabel","text","fieldsInStanza","prefix","scope","options","suiControlGroupProps","labelWidth","style","maxWidth","suiComponentProps","hideStepButtons","constructFieldConfig","Link_namespaceObject","Link_default","Paragraph_namespaceObject","Paragraph_default","url_namespaceObject","sui_forms_shared_utils_namespaceObject","TEST_IDS","HEADER","LEARN_MORE_LINK","normalizeDataTestIds","remoteAppName","compName","testIds","Header_testids","taggedTemplateLiteral_namespaceObject","taggedTemplateLiteral_default","external_styled_components_namespaceObject","external_styled_components_default","themes_namespaceObject","_templateObject","HeaderWrapper","div","pick","enterprise","variables","borderColor","prisma","neutral200","MESSAGES","COMMON","WARNING","WARNING_TEXT","LEARN_MORE","localizeMessages","Header_component","docLocationString","createElement","to","createDocsURL","openInNewContext","ConfigFormGenerator_styles_templateObject","_templateObject2","ActionAreaWrapper","MainWrapper","backgroundColor","backgroundColorPopup","overlayShadow","ConfigFormGenerator_component","formConfig","formData","onSubmit","SUIFormRendererCompound","ErrorView","Form","data","uischema","ActionButtons","showSaveWarning","stanzaValues","LimitsConfigStanzaValues","joinFieldValues","LimitsConfigJoinFieldValues","kvFieldValues","LimitsConfigKVFieldValues","subsearchFieldValues","LimitsConfigSubsearchFieldValues","schedulerFieldValues","LimitsConfigSchedulerFieldValues","spathFieldValues","LimitsConfigSPathFieldValues","pdfFieldValues","LimitsConfigPDFFieldValues","searchResultsFieldValues","LimitsConfigSearchResultsFieldValues","fieldValues","Map","async","handleACSResponse","response","status","err","json","Error","message","updateStanza","stanza","settings","args","body","JSON","stringify","UserService","fetch","constructLimitsConfigStanzaURL","method","headers","console","log","initialData","reduce","acc","curr","index","fetchConfigSettings","limitsData","selectedData","includes","Stanza","keys","Values","Number","selectData","records","error","CONTENT","CONTAINER","WAITSPINNER","ERROR_MSG","WaitSpinnerWrapper","styled","ErrorWrapper","compose","withExperienceFilter","withSplunkEnvFilter","withRBACFilter","setFormConfig","useState","setFormData","errorMessages","setErrorMessages","isLoading","setIsLoading","tokenAuthEnabled","setTokenAuthEnabled","useEffect","initFormConfig","limitsDefaults","defaultFormConfig","id","defaultStanza","setting","minValue","maxValue","assembleFormConfig","fetchFormConfig","initConfigSettings","Promise","all","Set","ERRORS_CODES","has","exec","Errors","successCb","failureCb","promises","trackingData","hasUpdates","i","prevSettings","currSettings","updatedData","changed","omitBy","prev","isEmpty","resolve","setPathValue","then","resp","catch","reject","responses","allSettled","TrackingService","reason","filterErrorMessages","errorUseCases","manageLimitsConfig","errorMsgs","nonEmptyErrorMsgs","errorMsg","upperFirst","updateErrMsgWithStanzaName","size","msg","permissionsNeeded","Comp","hasPermission","UserContextService","props","supportedEnvs","supportsEnv","ServerInfoService","withOSFilter","supportedOS","supportsOS","supportedExperiences","supportsExperience","ExperienceService","TOKEN_AUTH_BTN","WrapperDiv","StyledLink","Link","appearance","createURL","createRESTURL","app","this","isInitialized","acsVersion","version","fetchIsTokenAuthDisabled","fetchStackID","createJwtToken","fetchACSEnv","stackID","acsBaseURL","Headers","Authorization","jwtToken","jwtTokenArgs","name","expires_on","audience","fetchSettings","defaultFetchInit","querystring","encode","createJWTTokenURL","handleResponse","callbackFn","checkIfTokenAuthIsEnabledURL","isTokenAuthDisabled","entry","stackIDUrl","stackIDEntry","find","item","content","prodEnvUrl","formatACSBaseUrl","stgEnvUrl","statusEp","getACSHeaders","env"],"sourceRoot":""}