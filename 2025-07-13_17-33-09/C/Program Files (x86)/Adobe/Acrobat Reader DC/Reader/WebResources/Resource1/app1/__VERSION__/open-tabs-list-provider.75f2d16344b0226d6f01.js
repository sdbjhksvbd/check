"use strict";(self["webpackJsonp-dc-desktop-app"]=self["webpackJsonp-dc-desktop-app"]||[]).push([[756],{ASvh:(e,s,t)=>{t.r(s),t.d(s,{default:()=>OpenTabsListProvider});var n=t("plsW"),a=t("/fmr"),r=t("DJg0");class OpenTabsListProvider{ready(){return Promise.resolve(this)}async GetFileList(e){const s=await n.providers["native-api"](),t=await s.fileAPI(),a=await t.getOpenTabsData(),r=this.CreateFileInfosForOpenTabs(a);return r.sort(((s,t)=>{const n=e.column,a="ascending"===e.direction?1:-1;return"name"===n?s.name.localeCompare(t.name)*a:"size"===n?(s.size-t.size)*a:0})),r}async OpenFiles(e){const s={selectedOpenTabs:e.map((e=>e.doc.getProxy()))};(0,r.bL)(s)}CreateFileInfosForOpenTabs(e){const[s,t]=e,n=s.getItems();if(!n)return[];return n.map(((e,s)=>{const n=e.getProxyId();return{id:n?n.toString():e.get("name"),name:e.get("name"),doc:e,size:e.get("size"),type:a.h3.PDF,associatedIcons:t[s]}}))}}OpenTabsListProvider.getInstance=n.providerUtil.getSingletonFunction(OpenTabsListProvider)}}]);
//# sourceMappingURL=private/open-tabs-list-provider.75f2d16344b0226d6f01.map